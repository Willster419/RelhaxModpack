//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace RelhaxModpack.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "15.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("RelhaxModpack.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap discord_brand {
            get {
                object obj = ResourceManager.GetObject("discord_brand", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap donation {
            get {
                object obj = ResourceManager.GetObject("donation", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Software Licenses that apply to the DotNetZip library and tools
        ///
        ///As DotNetZip includes work derived from other projects, you are required to comply with the terms and conditions for each of them. These licenses include BSD, Apache, and zlib.
        ///
        ///To use the software, you must accept the licenses. If you do not accept the licenses, do not use the software.
        ///
        ///Original intellectual property in DotNetZip is provided under the Ms-PL:
        ///    
        ///    Copyright (c) 2006 - 2011 Dino Chiesa 
        ///    Copyright (c) 2006, 200 [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string DotNetZip {
            get {
                return ResourceManager.GetString("DotNetZip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap EMail {
            get {
                object obj = ResourceManager.GetObject("EMail", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap error_loading_picture {
            get {
                object obj = ResourceManager.GetObject("error_loading_picture", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap facebook_brand {
            get {
                object obj = ResourceManager.GetObject("facebook_brand", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap flag_de {
            get {
                object obj = ResourceManager.GetObject("flag_de", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap flag_gb {
            get {
                object obj = ResourceManager.GetObject("flag_gb", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap flag_us {
            get {
                object obj = ResourceManager.GetObject("flag_us", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap grey_area_mod {
            get {
                object obj = ResourceManager.GetObject("grey_area_mod", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap Home {
            get {
                object obj = ResourceManager.GetObject("Home", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The MIT License (MIT)
        ///Permission is hereby granted, free of charge, to any person obtaining a copy
        ///of this software and associated documentation files (the &quot;Software&quot;), to deal
        ///in the Software without restriction, including without limitation the rights
        ///to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
        ///copies of the Software, and to permit persons to whom the Software is
        ///furnished to do so, subject to the following conditions:
        ///
        ///The above copyright notice and this permission n [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string HtmlAgilityPack {
            get {
                return ResourceManager.GetString("HtmlAgilityPack", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The MIT License (MIT)
        ///
        ///Copyright (c) 2007 James Newton-King
        ///
        ///Permission is hereby granted, free of charge, to any person obtaining a copy of
        ///this software and associated documentation files (the &quot;Software&quot;), to deal in
        ///the Software without restriction, including without limitation the rights to
        ///use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
        ///the Software, and to permit persons to whom the Software is furnished to do so,
        ///subject to the following conditions:
        ///
        ///The ab [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Json_NET {
            get {
                return ResourceManager.GetString("Json_NET", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Icon similar to (Icon).
        /// </summary>
        internal static System.Drawing.Icon modpack_icon {
            get {
                object obj = ResourceManager.GetObject("modpack_icon", resourceCulture);
                return ((System.Drawing.Icon)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to                                  Apache License
        ///                           Version 2.0, January 2004
        ///                        http://www.apache.org/licenses/
        ///
        ///   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION
        ///
        ///   1. Definitions.
        ///
        ///      &quot;License&quot; shall mean the terms and conditions for use, reproduction,
        ///      and distribution as defined by Sections 1 through 9 of this document.
        ///
        ///      &quot;Licensor&quot; shall mean the copyright owner or entity authorized by
        ///      the copyright owner that is [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string modpack_license_agrement {
            get {
                return ResourceManager.GetString("modpack_license_agrement", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Microsoft Public License (Ms-PL)
        ///
        ///This license governs use of the accompanying software. If you use the software, you accept this license. If you do not accept the license, do not use the software.
        ///
        ///1. Definitions
        ///
        ///The terms &quot;reproduce,&quot; &quot;reproduction,&quot; &quot;derivative works,&quot; and &quot;distribution&quot; have the same meaning here as under U.S. copyright law.
        ///
        ///A &quot;contribution&quot; is the original software, or any additions or changes to the software.
        ///
        ///A &quot;contributor&quot; is any person that distributes its contribution [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string NAudio {
            get {
                return ResourceManager.GetString("NAudio", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap obfuscated_package_icon {
            get {
                object obj = ResourceManager.GetObject("obfuscated_package_icon", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap play_pause {
            get {
                object obj = ResourceManager.GetObject("play_pause", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap popular_icon {
            get {
                object obj = ResourceManager.GetObject("popular_icon", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap report {
            get {
                object obj = ResourceManager.GetObject("report", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Copyright (c) 2014-2015 amakaseev.
        ///
        ///Permission is hereby granted, free of charge, to any person obtaining
        ///a copy of this software and associated documentation files (the
        ///&quot;Software&quot;), to deal in the Software without restriction, including
        ///without limitation the rights to use, copy, modify, merge, publish,
        ///distribute, sublicense, and/or sell copies of the Software, and to
        ///permit persons to whom the Software is furnished to do so, subject to
        ///the following conditions:
        ///
        ///The above copyright notice and t [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string SpriteSheetPacker {
            get {
                return ResourceManager.GetString("SpriteSheetPacker", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap stop2 {
            get {
                object obj = ResourceManager.GetObject("stop2", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Copyright (c) 2016-2018 TeximpNet - Nicholas Woodfield
        /// 
        ///Permission is hereby granted, free of charge, to any person obtaining a copy
        ///of this software and associated documentation files (the &quot;Software&quot;), to deal
        ///in the Software without restriction, including without limitation the rights
        ///to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
        ///copies of the Software, and to permit persons to whom the Software is
        ///furnished to do so, subject to the following conditions:
        ///
        ///The above co [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string TeximpNet {
            get {
                return ResourceManager.GetString("TeximpNet", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap twitter_brand {
            get {
                object obj = ResourceManager.GetObject("twitter_brand", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to License: Custom License
        ///MICROSOFT SOFTWARE LICENSE TERMS
        ///MICROSOFT WINDOWS API CODE PACK FOR MICROSOFT .NET FRAMEWORK
        ///___________________________________________________
        ///These license terms are an agreement between Microsoft Corporation (or based on where you live, one of its affiliates) and you. Please read them. They apply to the software named above, which includes the media on which you received it, if any. The terms also apply to any Microsoft
        ///• updates,
        ///• supplements,
        ///• Internet-based services, [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string WindowsAPICodePack {
            get {
                return ResourceManager.GetString("WindowsAPICodePack", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap WoT_brand_light_grey {
            get {
                object obj = ResourceManager.GetObject("WoT_brand_light_grey", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
    }
}
